//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Это имплементация функции случайной генерации из книги Кёнига и Му "Accelerated C++"
//
// Этот алгоритм призван заменить алгоритм с получением остатка от целочисленного деления, типа  rand() % n,
// т.к. последний имеет склонность к неравномерной генерации. При некоторых значениях n, числа склонны повторяться

#include <cstdlib>
#include <stdexcept>
#include "nrand.h"

int nrand(int n) {

	if (n <= 0 || n > RAND_MAX)
		throw std::domain_error("Аргумент функции nrand вне диапазона");
	// Делим RAND_MAX на равные "секторы" общим числом n
	const int bucket_size = RAND_MAX / n;
	int r;
	// определяем к какой "сектор" "попала" функция rand(). цикл идет пока результат не будет в пределах [0, n)
	do r = rand() / bucket_size;
	while (r >= n);

	return r;
}